{"version":3,"file":"static/js/697.c790ea8f.chunk.js","mappings":"+LAUaA,GAAuBC,EAAAA,EAAAA,IAClC,CAT+B,SAACC,GAAK,OAAKA,EAAMC,OAAOC,cAAe,IAUtE,SAACA,GAAc,OAAKA,CAAc,IAGvBC,GAAkBJ,EAAAA,EAAAA,IAC7B,CAb0B,SAACC,GAAK,OAAKA,EAAMC,OAAOG,SAAU,IAc5D,SAACA,GAAS,OAAKA,CAAS,IAGbC,GAAeN,EAAAA,EAAAA,IAC1B,CAjBuB,SAACC,GAAK,OAAKA,EAAMC,OAAOA,MAAO,IAkBtD,SAACA,GAAM,OAAKA,CAAM,IAGPK,GAAoBP,EAAAA,EAAAA,IAC/B,CArB4B,SAACC,GAAK,OAAKA,EAAMC,OAAOM,KAAM,IAsB1D,SAACA,GAAK,OAAKA,CAAK,IAGLC,GAAuBT,EAAAA,EAAAA,IAClC,CAzB+B,SAACC,GAAK,OAAKA,EAAMC,OAAOQ,cAAe,IA0BtE,SAACA,GAAc,OAAKA,CAAc,IAGvBC,GAAoBX,EAAAA,EAAAA,IAC/B,CA7B4B,SAACC,GAAK,OAAKA,EAAMC,OAAOU,KAAM,IA8B1D,SAACA,GAAK,OAAKA,CAAK,IAGLC,GAAsBb,EAAAA,EAAAA,IACjC,CAjC8B,SAACC,GAAK,OAAKA,EAAMC,OAAOY,aAAc,IAkCpE,SAACA,GAAa,OAAKA,EAAcC,MAAM,EAAG,EAAE,IC9BjCC,EAAW,WAStB,MAAO,CACLb,gBATqBc,EAAAA,EAAAA,IAAYlB,GAUjCM,WATgBY,EAAAA,EAAAA,IAAYb,GAU5BF,QATae,EAAAA,EAAAA,IAAYX,GAUzBE,OATYS,EAAAA,EAAAA,IAAYV,GAUxBK,OATYK,EAAAA,EAAAA,IAAYN,GAUxBD,gBATqBO,EAAAA,EAAAA,IAAYR,GAUjCK,eAToBG,EAAAA,EAAAA,IAAYJ,GAWpC,C,uJC3BaK,GAAmBC,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,CAAmB,CAC/C,sBAAuB,CACnBE,eAAgB,UAEpB,qBAAsB,CAClBC,MAAO,UACPC,gBAAiB,0BACjB,SAAU,CACNA,gBAAiB,4BAGzB,+BAAgC,CAC5BD,MAAO,WAEX,gCAAiC,CAC7BA,MAAO,aAGFE,EAAc,CACvBC,UAAW,OACXC,aAAc,OACdL,eAAgB,SAEhB,4BAA6B,CACzBI,UAAW,OACXC,aAAc,U,6BCuDtB,EArEkB,SAAHC,GAAmD,IAA7CC,EAAUD,EAAVC,WAAYC,EAAYF,EAAZE,aAAcC,EAAWH,EAAXG,YAC7C,OACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CAACC,QAAS,EAAGC,GAAIV,EAAYW,UACjCJ,EAAAA,EAAAA,KAACb,EAAgB,CACfkB,MAAOR,EACPS,KAAMP,EACNQ,SAAU,SAACC,EAAGC,GAAO,OAAKX,EAAaW,EAAQ,EAC/CC,WACE,SAACC,GACC,OAAOX,EAAAA,EAAAA,KAACY,EAAAA,GAAcC,EAAAA,EAAAA,GAAA,CACpBC,UAAWC,EAAAA,GACXC,GAAE,mBAAAC,OAAqBN,EAAKL,OAExBK,GAER,KAKV,E,wCCzBe,SAASO,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACjBC,GAAkCpC,EAAAA,EAAAA,KAA1BJ,EAAKwC,EAALxC,MAAOF,EAAc0C,EAAd1C,eAEf2C,GAAsCC,EAAAA,EAAAA,UAAS,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA1CvB,EAAWyB,EAAA,GAAEE,EAAcF,EAAA,GAQ5B3B,EAAa8B,KAAKC,KAAK/C,EANP,GAatB,OAJAgD,EAAAA,EAAAA,YAAU,WACRV,GAASW,EAAAA,EAAAA,IAAe,CAAExB,KAAMP,EAAagC,MAVzB,KAUkDC,SAASC,OAAM,SAAAxD,GAAK,OAAIyD,QAAQC,IAAI1D,EAAM,GAClH,GAAG,CAAC0C,EAAUpB,EAXQ,KAcpBqC,EAAAA,EAAAA,MAACC,EAAAA,EAAa,CAAAjC,SAAA,EACZJ,EAAAA,EAAAA,KAACsC,EAAAA,EAAS,CAACC,MAAM,eACjBvC,EAAAA,EAAAA,KAACwC,EAAAA,EAAS,CAACrE,OAAQQ,IAClBkB,EAAa,IACZG,EAAAA,EAAAA,KAACyC,EAAS,CACR1C,YAAaA,EACbF,WAAYA,EACZC,aAnBa,SAAAW,GACnBiB,EAAejB,EACjB,MAsBF,C","sources":["redux/drinks/drinksSelectors.js","hooks/useDrink.js","components/Paginator/Paginator.styled.jsx","components/Paginator/Paginator.jsx","views/FavouriteDrinksPage/FavouriteDrinksPage.jsx"],"sourcesContent":["import { createSelector } from 'reselect';\n\nconst selectMainPageDrinksData = (state) => state.drinks.mainPageDrinks;\nconst selectIsLoadingData = (state) => state.drinks.isLoading;\nconst selectDrinksData = (state) => state.drinks.drinks;\nconst selectErrorDrinksData = (state) => state.drinks.error;\nconst selectFavoriteDrinksData = (state) => state.drinks.favoriteDrinks;\nconst selectTotalDrinksData = (state) => state.drinks.total;\nconst selectPopularDrinksData = (state) => state.drinks.popularDrinks;\n\nexport const selectMainPageDrinks = createSelector(\n  [selectMainPageDrinksData],\n  (mainPageDrinks) => mainPageDrinks\n);\n\nexport const selectIsLoading = createSelector(\n  [selectIsLoadingData],\n  (isLoading) => isLoading\n);\n\nexport const selectDrinks = createSelector(\n  [selectDrinksData],\n  (drinks) => drinks\n);\n\nexport const selectErrorDrinks = createSelector(\n  [selectErrorDrinksData],\n  (error) => error\n);\n\nexport const selectFavoriteDrinks = createSelector(\n  [selectFavoriteDrinksData],\n  (favoriteDrinks) => favoriteDrinks\n);\n\nexport const selectTotalDrinks = createSelector(\n  [selectTotalDrinksData],\n  (total) => total\n);\n\nexport const selectPopularDrinks = createSelector(\n  [selectPopularDrinksData],\n  (popularDrinks) => popularDrinks.slice(0, 4)\n);\n\nexport const selectDrinkById = (drinkId) => (state) =>\n  state.drinks.drinks.find((drink) => drink._id === drinkId);\n","import { useSelector } from 'react-redux';\n\nimport {\n  selectMainPageDrinks,\n  selectIsLoading,\n  selectDrinks,\n  selectErrorDrinks,\n  selectTotalDrinks,\n  selectFavoriteDrinks,\n  selectPopularDrinks,\n} from '../redux/drinks/drinksSelectors';\n\nexport const useDrink = () => {\n  const mainPageDrinks = useSelector(selectMainPageDrinks);\n  const isLoading = useSelector(selectIsLoading);\n  const drinks = useSelector(selectDrinks);\n  const error = useSelector(selectErrorDrinks);\n  const total = useSelector(selectTotalDrinks);\n  const favoriteDrinks = useSelector(selectFavoriteDrinks);\n  const popularDrinks = useSelector(selectPopularDrinks);\n\n  return {\n    mainPageDrinks,\n    isLoading,\n    drinks,\n    error,\n    total,\n    favoriteDrinks,\n    popularDrinks,\n  };\n};\n","import { styled } from '@mui/material/styles';\nimport Pagination from '@mui/material/Pagination';\n\nexport const StyledPagination = styled(Pagination)({\n    '& .MuiPagination-ul': {\n        justifyContent: 'center',\n    }, \n    '& li .Mui-selected': {\n        color: '#f3f3f3',\n        backgroundColor: 'rgba(64, 112, 205, 0.5)',\n        ':hover': {\n            backgroundColor: 'rgba(64, 112, 205, 0.5)',\n        }\n    },\n    '& li .MuiPaginationItem-root': {\n        color: '#f3f3f3',\n    },\n    '& .MuiPaginationItem-ellipsis': {\n        color: '#f3f3f3',\n    }\n})\nexport const stackStyles = {\n    marginTop: '54px',\n    marginBottom: '94px',\n    justifyContent: 'center',\n\n    '@media (min-width: 768px)': {\n        marginTop: '94px',\n        marginBottom: '154px',\n    }\n }\n\n\n\n// import styled from 'styled-components';\n\n// export const PagContainer = styled.div`\n//   display: flex;\n//   align-items: center;\n//   justify-content: space-between;\n//   padding-top: 14px;\n//   padding-bottom: 14px;\n//   margin-top: 40px;\n//   width: 295px;\n\n// `;\n\n// export const NumberContainer = styled.div`\n//   display: flex;\n//   gap: 18px;\n//   align-items: center;\n//   justify-content: center;\n// `;\n\n// export const Button = styled.button`\n//   display: flex;\n//   align-items: center;\n//   justify-content: center;\n//   background-color: transparent;\n// `;\n\n// export const NumberButton = styled.button`\n//   background-color: transparent;\n//   color: var(--white-color);\n//   font-weight: 500;\n//   font-size: 12px;\n//   width: 27px;\n//   height: 27px;\n//   border-radius: 50%;\n\n//   ${({active}) => active? `\n//      background-color: var(--blue-fifty-color);\n//   ` : ' '}\n\n//   &:hover {\n//     background-color: var(--blue-fifty-color);\n//   }\n// `;\n","import React from 'react';\n\nimport Stack from '@mui/material/Stack';\nimport { StyledPagination, stackStyles } from './Paginator.styled';\nimport { PaginationItem } from '@mui/material';\nimport { Link } from 'react-router-dom';\n\n// import { createTheme, ThemeProvider } from '@mui/styles';\n\n// import prev from '../../assets/images/paginator/prev.svg';\n// import next from '../../assets/images/paginator/next.svg';\n// import { ReactSVG } from 'react-svg';\n// import { Button, PagContainer, NumberButton, NumberContainer } from './Paginator.styled';\n\nconst Paginator = ({ totalPages, onPageChange, currentPage }) => {\n  return (\n    <Stack spacing={2} sx={stackStyles}>\n      <StyledPagination\n        count={totalPages}\n        page={currentPage}\n        onChange={(_, pageNum) => onPageChange(pageNum)}\n        renderItem={\n          (item) => {\n            return <PaginationItem\n              component={Link}\n              to={`/favorites?page=${item.page}`}\n            \n              {...item}\n            />\n          }\n        }\n      />\n    </Stack>\n  );\n};\n\n// const Paginator = ({totalDrinks, drinksPerPage}) => {\n//     const [currentPage, setCurrentPage] = useState(1);\n//     const totalPages = Math.ceil(totalDrinks / drinksPerPage);\n\n//     const handlePrevPage = () => {\n//         if (currentPage > 1) {\n//             setCurrentPage(currentPage - 1);\n//         }\n//     };\n\n//     const handleNextPage = () => {\n//         if (currentPage < totalPages) {\n//             setCurrentPage(currentPage + 1);\n//         }\n//     };\n\n//     if (totalPages <= 1) {\n//         return null;\n//     };\n\n//     const visiblePageCount = 5;\n//     const halfVisiblePageCount = Math.floor(visiblePageCount / 2);\n\n//     const firstVisiblePage = Math.max(1, currentPage - halfVisiblePageCount);\n//     const lastVisiblePage = Math.min(totalPages, firstVisiblePage + visiblePageCount - 1);\n\n//     return (\n//         <PagContainer>\n//             <Button type='button' onClick={handlePrevPage} disabled={currentPage === 1}>\n//                 <ReactSVG src={prev}/>\n//             </Button>\n//             <NumberContainer>\n//             {Array.from({ length: lastVisiblePage - firstVisiblePage + 1 }, (_, index) => (\n//                 <NumberButton\n//                     key={index}\n//                     onClick={() => setCurrentPage(firstVisiblePage + index)}\n//                     active={firstVisiblePage + index === currentPage}\n//                 >{firstVisiblePage + index }</NumberButton>\n//             ))}\n//                 </NumberContainer>\n//             <Button type='button' onClick={handleNextPage} disabled={currentPage === totalPages}>\n//                 <ReactSVG src={next}/>\n//             </Button>\n//         </PagContainer>\n//     )\n// }\n\nexport default Paginator;\n","import React, { useEffect, useState } from 'react';\nimport DrinkList from 'components/DrinkList/DrinkList';\nimport PageTitle from 'components/PageTitle/PageTitle';\nimport Paginator from 'components/Paginator/Paginator';\nimport { MainContainer } from 'styles/App.styled';\nimport { useDrink } from 'hooks/useDrink';\nimport { useDispatch } from 'react-redux';\nimport { getFavoriteAll } from 'redux/drinks/drinksOperations';\n\nexport default function FavoriteDrinksPage() {\n  const dispatch = useDispatch();\n  const { total, favoriteDrinks } = useDrink();\n\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const drinksPerPage = 9;\n\n  const onPageChange = pageNum => {\n    setCurrentPage(pageNum);\n  };\n\n  const totalPages = Math.ceil(total / drinksPerPage);\n  // const totalPages = 8;\n\n  useEffect(() => {\n    dispatch(getFavoriteAll({ page: currentPage, limit: drinksPerPage })).unwrap().catch(error => console.log(error));\n  }, [dispatch, currentPage, drinksPerPage]);\n\n  return (\n    <MainContainer>\n      <PageTitle title=\"Favorites\" />\n      <DrinkList drinks={favoriteDrinks} />\n      {totalPages > 1 && (\n        <Paginator\n          currentPage={currentPage}\n          totalPages={totalPages}\n          onPageChange={onPageChange}\n        />\n      )}\n    </MainContainer>\n  );\n}\n"],"names":["selectMainPageDrinks","createSelector","state","drinks","mainPageDrinks","selectIsLoading","isLoading","selectDrinks","selectErrorDrinks","error","selectFavoriteDrinks","favoriteDrinks","selectTotalDrinks","total","selectPopularDrinks","popularDrinks","slice","useDrink","useSelector","StyledPagination","styled","Pagination","justifyContent","color","backgroundColor","stackStyles","marginTop","marginBottom","_ref","totalPages","onPageChange","currentPage","_jsx","Stack","spacing","sx","children","count","page","onChange","_","pageNum","renderItem","item","PaginationItem","_objectSpread","component","Link","to","concat","FavoriteDrinksPage","dispatch","useDispatch","_useDrink","_useState","useState","_useState2","_slicedToArray","setCurrentPage","Math","ceil","useEffect","getFavoriteAll","limit","unwrap","catch","console","log","_jsxs","MainContainer","PageTitle","title","DrinkList","Paginator"],"sourceRoot":""}