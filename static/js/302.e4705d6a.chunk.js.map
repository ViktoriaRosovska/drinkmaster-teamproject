{"version":3,"file":"static/js/302.e4705d6a.chunk.js","mappings":"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","sources":["components/Buttons/WhiteLinkBtn/WhiteLinkBtn.styled.js","redux/filters/filtersSelector.js","components/DrinkPageHero/DrinkPageHero.styled.jsx","components/DrinkPageHero/DrinkPageHero.jsx","components/DrinkIngredientsList/IngredientItem.styled.js","components/DrinkIngredientsList/IngredientItem.jsx","components/DrinkIngredientsList/DrinkIngredientList.styled.js","components/DrinkIngredientsList/DrinkIngridientsList.jsx","components/RecipePreparation/RecipePreparation.styled.js","components/RecipePreparation/RecipePreparation.jsx","views/DrinkIdPage/DrinkIdPage.styled.js","views/DrinkIdPage/DrinkIdPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nconst transition = '300ms cubic-bezier(0.46, 0.03, 0.52, 0.96)';\n\nexport const WhiteButton = styled.button`\n  border-radius: 42px;\n  padding: 14px 40px;\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 18px;\n  background: ${props => props.theme.color};\n  color: ${props => props.theme.btncolor};\n  border: 1px solid transparent;\n\n  transition: color ${transition}, background-color ${transition},\n    border-color ${transition};\n\n  &:hover {\n    border: 1px solid ${props => props.theme.paginationAccentColor};\n    background: ${props => props.theme.btncolor};\n    color: ${props => props.theme.color};\n  }\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n    line-height: 18px;\n    padding: 18px 44px;\n  }\n`;\n","import { createSelector } from 'reselect';\n\nconst selectCategoriesData = state => state.filters.categories;\nconst selectIngredientsData = state => state.filters.ingredients;\nconst selectGlassesData = state => state.filters.glasses;\nconst selectIsLoadingData = state => state.filters.isLoading;\nconst selectErrorData = state => state.filters.error;\n\nexport const selectCategories = createSelector(\n  [selectCategoriesData],\n  categories => categories\n);\n\nexport const selectIngredients = createSelector(\n  [selectIngredientsData],\n  ingredients => ingredients\n);\n\nexport const selectGlasses = createSelector(\n  [selectGlassesData],\n  glasses => glasses\n);\n\nexport const selectIsLoading = createSelector(\n  [selectIsLoadingData],\n  isLoading => isLoading\n);\n\nexport const selectError = createSelector([selectErrorData], error => error);\n","import styled from 'styled-components';\n\nexport const HeroContainer = styled.div`\n  margin-bottom: 40px;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 80px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    margin-bottom: 100px;\n    display: flex;\n    justify-content: space-between;\n    position: relative;\n  }\n`;\nexport const GlassName = styled.p`\n  color: ${props => props.theme.secondaryTextColor};\n  margin-bottom: 20px;\n  font-size: 12px;\n  opacity: 50%;\n  line-height: calc(14 / 12);\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n    line-height: calc(20 / 16);\n  }\n\n  /* @media screen and (min-width: 1440px) {\n    margin-bottom: 0;\n  } */\n`;\nexport const About = styled.p`\n  font-size: 14px;\n  line-height: calc(18 / 14);\n  margin-bottom: 40px;\n  color: ${props => props.theme.color};\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n    line-height: calc(22 / 16);\n  }\n  @media screen and (min-width: 1440px) {\n    width: 593px;\n  }\n`;\nexport const Box = styled.div`\n  overflow: hidden;\n  object-fit: cover;\n`;\nexport const ImageDrink = styled.img`\n  width: 335px;\n  margin-top: 80px;\n  border-radius: 10px;\n  object-fit: cover;\n\n  @media screen and (min-width: 768px) {\n    width: 704px;\n  }\n  @media screen and (min-width: 1440px) {\n    width: 400px;\n    margin-top: 0px;\n    position: absolute;\n    top: -80px;\n    right: 0;\n  }\n`;\n// export const DefaultImage = styled.img`\n//   width: 335px;\n//   height: 400px;\n//   /* background-color: grey;\n//   opacity: 50%; */\n//   position: relative;\n\n//   @media screen and (min-width: 768px) {\n//     width: 704px;\n//     height: 400px;\n//   }\n\n//   @media screen and (min-width: 1440px) {\n//     width: 400px;\n//     height: 400px;\n//   }\n// `;\n","import { ToastContainer, toast, Slide } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useDrink } from '../../hooks/useDrink';\n\nimport {\n  addDrinkToFavorite,\n  removeDrink,\n  getFavoriteAll,\n} from '../../redux/drinks/drinksOperations';\nimport { selectFavoriteDrinks } from '../../redux/drinks/drinksSelectors';\n\nimport { WhiteButton } from 'components/Buttons/WhiteLinkBtn/WhiteLinkBtn.styled';\nimport {\n  About,\n  GlassName,\n  HeroContainer,\n  ImageDrink,\n  Box,\n} from './DrinkPageHero.styled';\n\nimport DefaultImg from '../../assets/images/drinkPage/coctailPlaceholder.png';\n\nconst DrinkPageHero = ({ id, glass, about, alcoholic, title, image }) => {\n  const notifyAdded = () => {\n    toast.success('Added to favorites');\n  };\n  const notifyRemoved = () => toast.info('Removed from favorites');\n  const { isLoading } = useDrink();\n  const { favoriteDrinks } = useDrink();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getFavoriteAll());\n  }, [dispatch]);\n\n  const favoriteDrinksList = useSelector(selectFavoriteDrinks);\n\n  const isDrinkInFavoriteList = id => {\n    if (favoriteDrinksList) {\n      return favoriteDrinksList.find(drink => drink._id === id);\n    }\n  };\n\n  return (\n    <>\n      <ToastContainer transition={Slide} />\n      <HeroContainer>\n        {favoriteDrinksList && (\n          <>\n            <div>\n              {glass && alcoholic && (\n                <GlassName>\n                  {glass} / {alcoholic}\n                </GlassName>\n              )}\n\n              {about ? (\n                <About>{about}</About>\n              ) : (\n                <p>\n                  <br />\n                </p>\n              )}\n              {!isDrinkInFavoriteList(id) ? (\n                <WhiteButton\n                  onClick={() => {\n                    dispatch(addDrinkToFavorite(id)).then(() => {\n                      notifyAdded();\n                    });\n                    if (favoriteDrinks.length === 0) {\n                      localStorage.setItem('motivatingFavorite1', 'false');\n                    } else if (favoriteDrinks.length === 4) {\n                      localStorage.setItem('motivatingFavorite10', 'false');\n                    }\n                  }}\n                  disabled={isLoading}\n                >\n                  Add to favorite\n                </WhiteButton>\n              ) : (\n                <WhiteButton\n                  onClick={() =>\n                    dispatch(removeDrink(id)).then(() => notifyRemoved())\n                  }\n                  disabled={isLoading}\n                >\n                  Remove from favorite\n                </WhiteButton>\n              )}\n            </div>\n\n            <Box>\n              <ImageDrink\n                src={image || DefaultImg}\n                alt={title}\n                onError={e => {\n                  e.target.src = DefaultImg;\n                }}\n              />\n            </Box>\n          </>\n        )}\n      </HeroContainer>\n    </>\n  );\n};\nexport default DrinkPageHero;\n","import styled from 'styled-components';\n\nexport const IngredientPhoto = styled.img`\n  width: 100%;\n\n  @media screen and (min-width: 768px) {\n    width: 157px;\n    height: 157px;\n  }\n`;\nexport const ImageBox = styled.div`\n  margin-top: 20px;\n  margin-bottom: 8px;\n  border-radius: 8px;\n  width: 157px;\n  height: 157px;\n  padding: 25px;\n  // background-color:  var(--blue-color);\n\n  @media (min-width: 768px) {\n    width: 220px;\n    /* height: 220px; */\n    padding: 22px;\n  }\n`;\n\nexport const Image = styled.img`\n  width: 157px;\n  margin-bottom: 8px;\n  border-radius: 8px;\n  overflow: hidden;\n\n  @media screen and (min-width: 768px) {\n    width: 220px;\n    margin-bottom: 14px;\n  }\n`;\nexport const Ingredient = styled.div`\n  padding-top: 14px;\n  display: flex;\n  justify-content: space-between;\n  max-width: 157px;\n\n  @media screen and (min-width: 768px) {\n    width: 220px;\n  }\n`;\nexport const IngredientTitle = styled.p`\n  margin-bottom: 0;\n  margin-right: 4px;\n  font-size: 12px;\n  color: ${props => props.theme.color};\n\n  @media screen and (min-width: 768px) {\n    width: 150px;\n    font-size: 16px;\n  }\n`;\n\nexport const IngredientMeasure = styled.p`\n  margin-bottom: 0;\n  color: ${props => props.theme.secondaryTextColor};\n  font-size: 14px;\n  line-height: 1.29;\n  text-align: end;\n  white-space: nowrap;\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n    line-height: 1.25;\n  }\n`;\n","import React from 'react';\nimport drinkIdPageBlock from '../../assets/images/drinkPage/coctailPlaceholder.png';\nimport {\n  ImageBox,\n  Ingredient,\n  IngredientMeasure,\n  IngredientPhoto,\n  IngredientTitle,\n} from './IngredientItem.styled';\n\nexport const IngredientItem = ({ title, measure, quantity, photo }) => {\n  return (\n    <ImageBox>\n      <IngredientPhoto\n        src={photo || drinkIdPageBlock}\n        alt={title}\n        onError={e => {\n          e.target.src = drinkIdPageBlock;\n        }}\n      />\n      <Ingredient>\n        <IngredientTitle>{title}</IngredientTitle>\n        <IngredientMeasure>{quantity ? quantity : measure}</IngredientMeasure>\n      </Ingredient>\n    </ImageBox>\n  );\n};\n","import styled from 'styled-components';\n\nexport const IngredientsTitle = styled.h2`\n  color: ${props => props.theme.color};\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 1.25;\n  margin-top: 18px;\n  margin-bottom: 0;\n\n  @media screen and (min-width: 768px) {\n    margin-top: 80px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    margin-top: 100px;\n  }\n`;\n\nexport const IngredientsList = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-row-gap: 20px;\n  grid-column-gap: 20px;\n  margin-top: 42px;\n\n  @media screen and (min-width: 768px) {\n    grid-template-columns: repeat(3, 1fr);\n    grid-column-gap: 22px;\n    grid-row-gap: 22px;\n    margin-top: 24px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    grid-template-columns: repeat(5, 1fr);\n\n    grid-column-gap: 35px;\n    grid-row-gap: 35px;\n  }\n`;","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getIngredients } from '../../redux/filters/filtersOperations';\nimport { IngredientItem } from './IngredientItem';\nimport {\n  IngredientsTitle,\n  IngredientsList,\n} from './DrinkIngredientList.styled';\nimport { selectIngredients } from 'redux/filters/filtersSelector';\n\nconst DrinkIngredientsList = ({ ingredients }) => {\n  const [ingredientsData, setIngredientsData] = useState([]);\n  let ingredientsAll = useSelector(state => selectIngredients(state));\n  const dispatch = useDispatch();\n\n  const ingredientsIdArr = ingredients.map(\n    ingredient => ingredient.ingredientId\n  );\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        if (ingredientsAll.length === 0) {\n          const data = await dispatch(getIngredients());\n\n          if (data.payload.length !== 0) {\n            const ingredientsImages = data.payload.filter(item =>\n              ingredientsIdArr.includes(item._id)\n            );\n            setIngredientsData(ingredientsImages);\n          }\n        }\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n\n    fetchData();\n  }, [dispatch, ingredientsAll, ingredientsIdArr]);\n\n  const combinedIngredients = ingredients.map(ingredient => {\n    const ingredientData = ingredientsData.find(\n      data => data._id === ingredient.ingredientId\n    );\n    return {\n      ...ingredient,\n      ingredientThumb: ingredientData ? ingredientData.ingredientThumb : null,\n    };\n  });\n\n  return (\n    <>\n      {combinedIngredients.length > 0 && (\n        <>\n          <IngredientsTitle>Ingredients</IngredientsTitle>\n          <IngredientsList>\n            {combinedIngredients.map(\n              ({ title, measure, ingredientId, ingredientThumb, quantity }) => (\n                <IngredientItem\n                  title={title}\n                  measure={measure}\n                  quantity={quantity}\n                  photo={ingredientThumb}\n                  key={ingredientId}\n                />\n              )\n            )}\n          </IngredientsList>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default DrinkIngredientsList;\n","import styled from 'styled-components';\n\nexport const RecipePreparationTitle = styled.h2`\n  color: ${({ theme }) => theme.mainText};\n  font-size: 28px;\n  font-weight: 600;\n  line-height: 1.14;\n  margin-top: 80px;\n  margin-bottom: 0;\n\n  @media screen and (min-width: 768px) {\n    font-size: 40px;\n    line-height: 1.1;\n  }\n\n  @media screen and (min-width: 1440px) {\n    margin-top: 100px;\n  }\n`;\nexport const List = styled.ul`\n  list-style-type: square;\n  margin-bottom: 40px;\n\n  @media screen and (min-width: 768px) {\n    width: 549px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    margin-bottom: 0;\n    width: 549px;\n  }\n`;\n\nexport const ListItem = styled.li`\n  font-size: 14px;\n  line-height: calc(18 / 14);\n  padding: 14px 0;\n  border-bottom: 1px dotted rgba(243, 243, 243, 0.2);\n  color: ${props => props.theme.color};\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n    line-height: calc(22 / 16);\n  }\n`;\n// export const RecipeBox = styled.div`\n//   @media screen and (min-width: 1440px) {\n//     display: flex;\n//     justify-content: space-between;\n//     flex-direction: row-reverse;\n//     gap: 60px;\n//   }\n// `;\n// export const Box = styled.div`\n//   overflow: hidden;\n//   border-radius: 10px;\n// `;\n// export const Picture = styled.picture`\n//   width: 335px;\n//   height: 430px;\n\nexport const RecipePreparationDescription = styled.p`\n  color: ${({ theme }) => theme.mainText};\n  font-size: 14px;\n  font-weight: 400;\n  line-height: 1.285;\n  margin-top: 40px;\n  margin-bottom: 0;\n  overflow-wrap: break-word;\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n    line-height: 1.375;\n  }\n\n  @media screen and (min-width: 1440px) {\n    margin: 0;\n  }\n`;\n\nexport const RecipePreparationImage = styled.img`\n  width: 100%;\n  height: 430px;\n  object-fit: cover;\n  margin-top: 40px;\n  border-radius: 10px;\n\n  @media screen and (min-width: 1440px) {\n    margin: 0;\n    height: 480px;\n    min-width: 631px;\n  }\n`;\n\nexport const RecipePreparationWrap = styled.div`\n  @media screen and (min-width: 1440px) {\n    display: flex;\n    flex-direction: row-reverse;\n    column-gap: 60px;\n    margin-top: 60px;\n    justify-content: flex-end;\n  }\n`;\n","import {\n  RecipePreparationTitle,\n  List,\n  ListItem,\n  RecipePreparationImage,\n  RecipePreparationWrap,\n} from './RecipePreparation.styled';\n\nimport drinkIdPageDesk1x from '../../assets/images/drinkIdPage/drink-id-page-desk@1x.jpg';\nimport drinkIdPageDesk2x from '../../assets/images/drinkIdPage/drink-id-page-desk@2x.jpg';\nimport drinkIdPageTabl1x from '../../assets/images/drinkIdPage/drink-id-page-tabl@1x.jpg';\nimport drinkIdPageTabl2x from '../../assets/images/drinkIdPage/drink-id-page-mob@2x.jpg';\nimport drinkIdPageMob1x from '../../assets/images/drinkIdPage/drink-id-page-mob@1x.jpg';\nimport drinkIdPageMob2x from '../../assets/images/drinkIdPage/drink-id-page-mob@2x.jpg';\n\nconst RecipePreparation = ({ instructions }) => {\n  const steps = instructions?.split('.');\n  const noEmptySteps = steps?.filter(step => step.trim() !== '');\n  //   return (\n  //     <>\n  //       <RecipeTitle>Recipe Preparation</RecipeTitle>\n  //       <RecipeBox>\n  //         <List>\n  //           {noEmptySteps?.map(step => (\n  //             <ListItem key={step}>{step}</ListItem>\n  //           ))}\n  //         </List>\n  //         <Box>\n  //           <Picture>\n  //             <source\n  //               srcSet={drinkIdPageDesk1x}\n  //\n  return (\n    <>\n      <RecipePreparationTitle>Recipe Preparation</RecipePreparationTitle>\n      <RecipePreparationWrap>\n        <List>\n          {noEmptySteps?.map(step => (\n            <ListItem key={step}>{step}</ListItem>\n          ))}\n        </List>\n\n        <picture>\n          <source\n            media=\"(min-width: 1440px)\"\n            srcSet={`${drinkIdPageDesk1x} 1x, ${drinkIdPageDesk2x} 2x`}\n          />\n          <source\n            media=\"(min-width: 768px)\"\n            srcSet={`${drinkIdPageTabl1x} 1x, ${drinkIdPageTabl2x} 2x`}\n          />\n          <source\n            media=\"(min-width: 375px)\"\n            srcSet={`${drinkIdPageMob1x} 1x, ${drinkIdPageMob2x} 2x`}\n          />\n          <RecipePreparationImage src={drinkIdPageMob1x} alt=\"drinks photo\" />\n        </picture>\n      </RecipePreparationWrap>\n    </>\n  );\n};\nexport default RecipePreparation;\n","import styled from 'styled-components';\n\nexport const Title = styled.h1`\ncolor: ${props => props.theme.color};\n  font-size: 32px;\n  margin-bottom: 8px;\n  font-weight: 600;\n  color: ${props => props.theme.color};\n\n  @media screen and (min-width: 768px) {\n    font-size: 56px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    font-size: 64px;\n    width: 860px;\n  }\n`;\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { getDrinkById } from 'redux/drinks/drinksOperations.js';\nimport { selectDrinkById } from 'redux/drinks/drinksSelectors';\n\nimport DrinkPageHero from 'components/DrinkPageHero/DrinkPageHero';\nimport DrinkIngridientList from 'components/DrinkIngredientsList/DrinkIngridientsList';\nimport RecipePreparation from 'components/RecipePreparation/RecipePreparation';\n\nimport { MainContainer } from 'styles/App.styled';\nimport { Title } from './DrinkIdPage.styled';\nimport Loader from 'components/Loader';\n\nconst DrinkIdPage = () => {\n  const dispatch = useDispatch();\n  const { drinkId } = useParams();\n  const drink = useSelector(state => selectDrinkById(state, drinkId));\n\n  useEffect(() => {\n    dispatch(getDrinkById(drinkId));\n  }, [dispatch, drinkId]);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  return (\n    <MainContainer>\n      {drink && drink.ingredients ? (\n        <>\n          <Title>{drink.drink} </Title>\n          <DrinkPageHero\n            id={drink._id}\n            glass={drink.glass}\n            about={drink.description || null}\n            title={drink.drink}\n            image={drink.drinkThumb || null}\n            alcoholic={drink.alcoholic}\n          />\n\n          <DrinkIngridientList ingredients={drink.ingredients} />\n          <RecipePreparation instructions={drink.instructions} />\n        </>\n      ) : (\n        <Loader />\n      )}\n    </MainContainer>\n  );\n};\n\nexport default DrinkIdPage;\n"],"names":["transition","WhiteButton","styled","button","_templateObject","_taggedTemplateLiteral","props","theme","color","btncolor","paginationAccentColor","selectCategories","createSelector","state","filters","categories","selectIngredients","ingredients","selectGlasses","glasses","selectIsLoading","isLoading","selectError","error","HeroContainer","div","GlassName","p","_templateObject2","secondaryTextColor","About","_templateObject3","Box","_templateObject4","ImageDrink","img","_templateObject5","_ref","id","glass","about","alcoholic","title","image","useDrink","favoriteDrinks","dispatch","useDispatch","useEffect","getFavoriteAll","favoriteDrinksList","useSelector","selectFavoriteDrinks","_jsxs","_Fragment","children","_jsx","ToastContainer","Slide","find","drink","_id","isDrinkInFavoriteList","onClick","removeDrink","then","toast","info","disabled","addDrinkToFavorite","success","length","localStorage","setItem","src","DefaultImg","alt","onError","e","target","IngredientPhoto","ImageBox","Ingredient","IngredientTitle","IngredientMeasure","_templateObject6","IngredientItem","measure","quantity","photo","drinkIdPageBlock","IngredientsTitle","h2","IngredientsList","ul","_useState","useState","_useState2","_slicedToArray","ingredientsData","setIngredientsData","ingredientsAll","ingredientsIdArr","map","ingredient","ingredientId","fetchData","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","ingredientsImages","wrap","_context","prev","next","getIngredients","sent","payload","filter","item","includes","t0","console","log","message","stop","apply","arguments","combinedIngredients","ingredientData","_objectSpread","ingredientThumb","_ref3","RecipePreparationTitle","mainText","List","ListItem","li","RecipePreparationImage","RecipePreparationWrap","instructions","steps","split","noEmptySteps","step","trim","media","srcSet","concat","drinkIdPageDesk1x","drinkIdPageDesk2x","drinkIdPageTabl1x","drinkIdPageTabl2x","drinkIdPageMob1x","drinkIdPageMob2x","Title","h1","drinkId","useParams","selectDrinkById","getDrinkById","window","scrollTo","MainContainer","DrinkPageHero","description","drinkThumb","DrinkIngridientList","RecipePreparation","Loader"],"sourceRoot":""}